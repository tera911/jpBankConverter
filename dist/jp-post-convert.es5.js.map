{"version":3,"file":"jp-post-convert.es5.js","sources":["../src/jp-post-branch.ts","../src/jp-post-convert.ts"],"sourcesContent":["export class JpPostBranch {\n  private static _kansuji = ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九']\n  private static _kansujiYomi = [\n    'ゼロ',\n    'イチ',\n    'ニ',\n    'サン',\n    'ヨン',\n    'ゴ',\n    'ロク',\n    'ナナ',\n    'ハチ',\n    'キユウ'\n  ]\n  private _branchName: string\n  private _branchKana: string\n  private _branchCode: string\n\n  constructor(branchCode: string) {\n    if (branchCode.length !== 3) {\n      throw Error('支店番号が不正です')\n    }\n    this._branchKana = branchCode\n      .split('')\n      .map(e => {\n        return JpPostBranch._kansujiYomi[parseInt(e, 0)]\n      })\n      .join('')\n    this._branchName = branchCode\n      .split('')\n      .map(e => {\n        return JpPostBranch._kansuji[parseInt(e, 0)]\n      })\n      .join('')\n    this._branchCode = branchCode\n  }\n\n  get code() {\n    return this._branchCode\n  }\n\n  get name() {\n    return this._branchName\n  }\n\n  get kana() {\n    return this._branchKana\n  }\n}\n","import { JpPostBranch } from './jp-post-branch'\n\nexport default class JpPostConvert {\n  private _symbol1: string\n  private _symbol2: string\n  private _jNumber: string\n\n  constructor(symbol1: string, symbol2: string, jNumber: string) {\n    this._symbol1 = symbol1\n    this._symbol2 = symbol2.length === 0 ? '0' : symbol2\n    this._jNumber = jNumber\n\n    if (!this.validate()) {\n      throw new Error('口座情報が不正です。')\n    }\n  }\n\n  toJpBranch(): JpPostBranch {\n    let branchCode = '0'\n    if (this.isNormalType()) {\n      branchCode = this._symbol1.substr(1, 2) + '8'\n    } else {\n      branchCode = this._symbol1.substr(1, 2) + '9'\n    }\n    return new JpPostBranch(branchCode)\n  }\n\n  toBankNumber(): string {\n    if (this.isNormalType()) {\n      return ('00000000' + this._jNumber)\n        .substr(('00000000' + this._jNumber).length - 8)\n        .substr(0, 7)\n    } else {\n      return ('0000000' + this._jNumber).substr(\n        ('0000000' + this._jNumber).length - 7\n      )\n    }\n  }\n\n  public isNormalType(): boolean {\n    return !(this._symbol2.substr(0, 1) === '1')\n  }\n\n  private validate(): boolean {\n    let isNormal = this.isNormalType()\n    let c = this._symbol1.substr(1, 2)\n\n    let s1 = this._symbol1\n    let s2 = this._symbol2\n    let s3 = this._jNumber\n\n    /** どれか一つでもNGならエラー */\n    return !(\n      !s1.match(/^\\d{5}$/) ||\n      !s2.match(/^\\d?$/) ||\n      (isNormal && !s3.match(/^\\d{1,8}$/)) ||\n      (!isNormal && !s3.match(/^\\d{1,6}$/)) ||\n      !s1.match(/^[01]/) ||\n      !s1.match(/0$/) ||\n      (isNormal && !s3.match(/1$/)) ||\n      !this.checkDigit()\n    )\n  }\n\n  private checkDigit(): boolean {\n    let s1 = this._symbol1\n    let s3 = this._jNumber\n    let digit = parseInt(s1.substr(3, 1), 0)\n\n    let numbers = ('00000000' + this._jNumber).substr(\n      ('00000000' + this._jNumber).length - 8\n    )\n\n    let list: string[] = [\n      numbers.substr(numbers.length - 1, 1),\n      numbers.substr(numbers.length - 2, 1),\n      numbers.substr(numbers.length - 3, 1),\n      numbers.substr(numbers.length - 4, 1),\n      numbers.substr(numbers.length - 5, 1),\n      numbers.substr(numbers.length - 6, 1),\n      numbers.substr(numbers.length - 7, 1),\n      numbers.substr(numbers.length - 8, 1),\n\n      s1.substr(4, 1),\n      '0',\n      s1.substr(2, 1),\n      s1.substr(1, 1),\n      s1.substr(0, 1)\n    ]\n\n    let total = list\n      .map((e, i) => {\n        let num = parseInt(e, 0)\n        let c: number = 0\n        if (i % 3 === 0) {\n          c = num\n        } else if (i % 3 === 1) {\n          if (num > 4) {\n            c = num * 2 - 9\n          } else {\n            c = num * 2\n          }\n        } else if (i % 3 === 2) {\n          c = num * 3\n        }\n        return c\n      })\n      .reduce((a, b) => {\n        return a + b\n      }, 0)\n    return total % 10 === digit\n  }\n}\n"],"names":[],"mappings":"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"}